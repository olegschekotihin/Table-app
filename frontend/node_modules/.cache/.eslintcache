[{"D:\\Table-app\\frontend\\src\\reportWebVitals.js":"1","D:\\Table-app\\frontend\\src\\components\\Table\\index.tsx":"2","D:\\Table-app\\frontend\\src\\App.tsx":"3","D:\\Table-app\\frontend\\src\\index.tsx":"4","D:\\Table-app\\frontend\\src\\components\\HeadTable\\HeadRow\\index.tsx":"5","D:\\Table-app\\frontend\\src\\components\\HeadTable\\HeadColumn\\index.tsx":"6","D:\\Table-app\\frontend\\src\\components\\HeadTable\\Input\\index.tsx":"7","D:\\Table-app\\frontend\\src\\components\\BodyTable\\Pagination\\index.tsx":"8","D:\\Table-app\\frontend\\src\\components\\BodyTable\\Row\\index.tsx":"9","D:\\Table-app\\frontend\\src\\components\\BodyTable\\Column\\index.tsx":"10"},{"size":362,"mtime":1630339861428,"results":"11","hashOfConfig":"12"},{"size":2279,"mtime":1634250825738,"results":"13","hashOfConfig":"12"},{"size":610,"mtime":1634249235863,"results":"14","hashOfConfig":"12"},{"size":500,"mtime":1630339861428,"results":"15","hashOfConfig":"12"},{"size":613,"mtime":1634250907652,"results":"16","hashOfConfig":"12"},{"size":364,"mtime":1634844986397,"results":"17","hashOfConfig":"12"},{"size":304,"mtime":1634844998668,"results":"18","hashOfConfig":"12"},{"size":703,"mtime":1634845144068,"results":"19","hashOfConfig":"12"},{"size":401,"mtime":1634250961992,"results":"20","hashOfConfig":"12"},{"size":257,"mtime":1634844889731,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"17hnpey",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Table-app\\frontend\\src\\reportWebVitals.js",[],["46","47"],"D:\\Table-app\\frontend\\src\\components\\Table\\index.tsx",["48","49","50"],"import React, {useEffect, useState} from \"react\";\nimport Row from \"../BodyTable/Row\"\nimport HeadRow from \"../HeadTable/HeadRow\";\nimport Pagination from \"../BodyTable/Pagination\";\n\nexport interface TableProps {\n  pageSize?: number\n  usersData: any\n}\n\nfunction Table({pageSize, usersData}:TableProps) {\n  const [filterDataValue, setFilterDataValue] = useState<string>('');\n  const [dataValue, setDataValue] = useState<string>('');\n  const [newUsersData, setNewUsersData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const initDataLength = usersData.length\n  const [currentDataLength, setCurrentDataLength] = useState(initDataLength)\n  let rowInPage = pageSize ? pageSize : 10\n  // Get current posts\n  const indexOfLastPost = currentPage * rowInPage;\n  const indexOfFirstPost = indexOfLastPost - rowInPage;\n  const currentData = newUsersData.slice(indexOfFirstPost, indexOfLastPost);\n\n  useEffect( () => {\n    setNewUsersData(usersData)\n    setCurrentDataLength(usersData.length)\n  }, [usersData])\n\n  useEffect(() => {\n    let newUserData = usersData.filter((user:string) => {\n      let keysUser = Object.keys(user)\n      let currentElem:any;\n\n      keysUser.forEach((elem, index) => {\n        if(elem === dataValue) {\n          currentElem = elem\n        }\n      })\n      if(user[currentElem] == filterDataValue) {\n        return user\n      }\n    })\n    if(newUserData.length !== 0 ) {\n      setNewUsersData(newUserData)\n      setCurrentDataLength(newUserData.length)\n    } else {\n      setNewUsersData(usersData)\n      setCurrentDataLength(usersData.length)\n    }\n  },[filterDataValue])\n\n  const onChange = (event:any) => {\n    setFilterDataValue(event.target.value);\n    setDataValue(event.target.dataset['name']);\n  }\n\n  const onPaginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container'>\n      <table className='table'>\n        <thead>\n        <HeadRow\n          param={newUsersData}\n          onchange={onChange}\n        />\n        </thead>\n        <tbody>\n        <Row\n          rows={currentData}/>\n        </tbody>\n      </table>\n      <Pagination\n        postsPerPage={rowInPage}\n        totalPosts={currentDataLength}\n        onPaginate={onPaginate}\n      />\n    </div>\n  );\n}\n\nexport default Table",["51","52"],"D:\\Table-app\\frontend\\src\\App.tsx",[],"D:\\Table-app\\frontend\\src\\index.tsx",[],"D:\\Table-app\\frontend\\src\\components\\HeadTable\\HeadRow\\index.tsx",["53"],"import React from \"react\";\nimport HeadColumn from \"../HeadColumn\";\n\nexport interface HeadRowProps {\n  param: any\n  onchange: any\n}\n\nfunction HeadRow({param, onchange}:HeadRowProps) {\n  let currentData = [];\n  if (param && param.length !== 0) {\n    currentData = param.find((elem:any, index:number) => {\n      if(index === 0) {\n        return elem\n      }\n    })\n  }\n  return(\n    <tr>\n      {Object.keys(currentData).map((elem, index) => {\n        return <HeadColumn\n          value={elem}\n          key={index}\n          id={elem}\n          onchange={onchange}/>\n      })}\n    </tr>\n  )\n}\n\nexport default HeadRow","D:\\Table-app\\frontend\\src\\components\\HeadTable\\HeadColumn\\index.tsx",[],"D:\\Table-app\\frontend\\src\\components\\HeadTable\\Input\\index.tsx",[],"D:\\Table-app\\frontend\\src\\components\\BodyTable\\Pagination\\index.tsx",["54"],"D:\\Table-app\\frontend\\src\\components\\BodyTable\\Row\\index.tsx",[],"D:\\Table-app\\frontend\\src\\components\\BodyTable\\Column\\index.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":30,"column":54,"nodeType":"61","messageId":"62","endLine":30,"endColumn":56},{"ruleId":"63","severity":1,"message":"64","line":39,"column":28,"nodeType":"65","messageId":"66","endLine":39,"endColumn":30},{"ruleId":"67","severity":1,"message":"68","line":50,"column":5,"nodeType":"69","endLine":50,"endColumn":22,"suggestions":"70"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"71","line":12,"column":55,"nodeType":"61","messageId":"62","endLine":12,"endColumn":57},{"ruleId":"72","severity":1,"message":"73","line":21,"column":13,"nodeType":"74","endLine":21,"endColumn":89},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataValue' and 'usersData'. Either include them or remove the dependency array. If 'setNewUsersData' needs the current value of 'usersData', you can also switch to useReducer instead of useState and read 'usersData' in the reducer.","ArrayExpression",["77"],"Array.prototype.find() expects a value to be returned at the end of arrow function.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [dataValue, filterDataValue, usersData]",{"range":"80","text":"81"},[1593,1610],"[dataValue, filterDataValue, usersData]"]