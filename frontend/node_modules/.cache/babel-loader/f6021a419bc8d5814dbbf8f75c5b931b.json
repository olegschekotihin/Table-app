{"ast":null,"code":"var _jsxFileName = \"/home/oschekotihin/work/Table-app/frontend/src/components/HeadRow/index.js\";\nimport React from \"react\";\nimport HeadColumn from \"../HeadColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeadRow({\n  param\n}) {\n  let currentData = [];\n\n  if (param && param.length != 0) {\n    currentData = param.find((elem, index) => {\n      if (index == 0) {\n        return elem;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: Object.keys(currentData).map(elem => {\n      return /*#__PURE__*/_jsxDEV(HeadColumn, {\n        value: elem,\n        id: param.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = HeadRow;\nexport default HeadRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeadRow\");","map":{"version":3,"sources":["/home/oschekotihin/work/Table-app/frontend/src/components/HeadRow/index.js"],"names":["React","HeadColumn","HeadRow","param","currentData","length","find","elem","index","Object","keys","map","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA0B;AACtB,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAID,KAAK,IAAIA,KAAK,CAACE,MAAN,IAAe,CAA5B,EAA+B;AAC3BD,IAAAA,WAAW,GAAGD,KAAK,CAACG,IAAN,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtC,UAAGA,KAAK,IAAI,CAAZ,EAAe;AACX,eAAOD,IAAP;AACH;AACJ,KAJa,CAAd;AAKH;;AACD,sBACI;AAAA,cACKE,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,GAAzB,CAA6BJ,IAAI,IAAI;AAClC,0BAAO,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEA,IAAnB;AAAyB,QAAA,EAAE,EAAEJ,KAAK,CAACS;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KAhBQV,O;AAkBT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport HeadColumn from \"../HeadColumn\";\n\nfunction HeadRow({param}) {\n    let currentData = [];\n    if (param && param.length !=0) {\n        currentData = param.find((elem, index) => {\n            if(index == 0) {\n                return elem\n            }\n        })\n    }\n    return(\n        <tr>\n            {Object.keys(currentData).map(elem => {\n                return <HeadColumn value={elem} id={param.userId}/>\n            })}\n        </tr>\n    )\n}\n\nexport default HeadRow"]},"metadata":{},"sourceType":"module"}