{"ast":null,"code":"var _jsxFileName = \"D:\\\\Table-app\\\\frontend\\\\src\\\\components\\\\HeadTable\\\\HeadRow\\\\index.tsx\";\nimport React from \"react\";\nimport HeadColumn from \"../HeadColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeadRow({\n  param,\n  onchange\n}) {\n  let currentData = [];\n\n  if (param && param.length !== 0) {\n    currentData = param.find((elem, index) => {\n      if (index === 0) {\n        return elem;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: Object.keys(currentData).map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(HeadColumn, {\n        value: elem,\n        id: elem,\n        onchange: onchange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = HeadRow;\nexport default HeadRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeadRow\");","map":{"version":3,"sources":["D:/Table-app/frontend/src/components/HeadTable/HeadRow/index.tsx"],"names":["React","HeadColumn","HeadRow","param","onchange","currentData","length","find","elem","index","Object","keys","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAOA,SAASC,OAAT,CAAiB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAjB,EAAiD;AAC/C,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAIF,KAAK,IAAIA,KAAK,CAACG,MAAN,KAAgB,CAA7B,EAAgC;AAC9BD,IAAAA,WAAW,GAAGF,KAAK,CAACI,IAAN,CAAW,CAACC,IAAD,EAAWC,KAAX,KAA4B;AACnD,UAAGA,KAAK,KAAK,CAAb,EAAgB;AACd,eAAOD,IAAP;AACD;AACF,KAJa,CAAd;AAKD;;AACD,sBACE;AAAA,cACGE,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,GAAzB,CAA6B,CAACJ,IAAD,EAAOC,KAAP,KAAiB;AAC7C,0BAAO,QAAC,UAAD;AAAY,QAAA,KAAK,EAAED,IAAnB;AAAqC,QAAA,EAAE,EAAEA,IAAzC;AAA+C,QAAA,QAAQ,EAAEJ;AAAzD,SAA8BK,KAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAhBQP,O;AAkBT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport HeadColumn from \"../HeadColumn\";\n\nexport interface HeadRowProps {\n  param: any\n  onchange: any\n}\n\nfunction HeadRow({param, onchange}:HeadRowProps) {\n  let currentData = [];\n  if (param && param.length !==0) {\n    currentData = param.find((elem:any, index:number) => {\n      if(index === 0) {\n        return elem\n      }\n    })\n  }\n  return(\n    <tr>\n      {Object.keys(currentData).map((elem, index) => {\n        return <HeadColumn value={elem} key={index} id={elem} onchange={onchange}/>\n      })}\n    </tr>\n  )\n}\n\nexport default HeadRow"]},"metadata":{},"sourceType":"module"}